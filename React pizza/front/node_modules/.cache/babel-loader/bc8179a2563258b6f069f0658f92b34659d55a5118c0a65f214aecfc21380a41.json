{"ast":null,"code":"import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nexport const PizzaApi = createApi({\n  reducerPath: \"PizzaApi\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: \"http://localhost:3000/\"\n  }),\n  tagTypes: [\"Pizzas\", \"CartItems\"],\n  endpoints: builder => ({\n    getAllPizzas: builder.query({\n      query: request => ({\n        url: \"items?\",\n        method: \"GET\",\n        params: {\n          ...request\n        }\n      }),\n      providesTags: () => [{\n        type: \"Pizzas\"\n      }]\n    }),\n    getCartItems: builder.query({\n      query: () => ({\n        url: \"cartItems?\",\n        method: \"GET\"\n      }),\n      providesTags: () => [{\n        type: \"CartItems\"\n      }]\n    }),\n    add\n  })\n});\nexport const {\n  useGetAllPizzasQuery,\n  useGetCartItemsQuery\n} = PizzaApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","PizzaApi","reducerPath","baseQuery","baseUrl","tagTypes","endpoints","builder","getAllPizzas","query","request","url","method","params","providesTags","type","getCartItems","add","useGetAllPizzasQuery","useGetCartItemsQuery"],"sources":["C:/Users/alexs/OneDrive/Desktop/www/petprojects/React pizza/front/src/API/api.ts"],"sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\nimport { IPizzaRequest } from \"../types\";\r\nimport { IPizzaItem } from \"../redux/slices/pizzaSlice\";\r\n\r\nexport const PizzaApi = createApi({\r\n  reducerPath: \"PizzaApi\",\r\n  baseQuery: fetchBaseQuery({ baseUrl: \"http://localhost:3000/\" }),\r\n  tagTypes: [\"Pizzas\", \"CartItems\"],\r\n  endpoints: (builder) => ({\r\n    getAllPizzas: builder.query<IPizzaItem[], IPizzaRequest>({\r\n      query: (request) => ({\r\n        url: \"items?\",\r\n        method: \"GET\",\r\n        params: {\r\n          ...request,\r\n        },\r\n      }),\r\n      providesTags: () => [{ type: \"Pizzas\" }],\r\n    }),\r\n    getCartItems: builder.query({\r\n      query: () => ({\r\n        url: \"cartItems?\",\r\n        method: \"GET\",\r\n      }),\r\n      providesTags: () => [{ type: \"CartItems\" }],\r\n    }),\r\n    add\r\n  }),\r\n});\r\n\r\nexport const { useGetAllPizzasQuery, useGetCartItemsQuery } = PizzaApi;\r\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,cAAc,QAAQ,8BAA8B;AAIxE,OAAO,MAAMC,QAAQ,GAAGF,SAAS,CAAC;EAChCG,WAAW,EAAE,UAAU;EACvBC,SAAS,EAAEH,cAAc,CAAC;IAAEI,OAAO,EAAE;EAAyB,CAAC,CAAC;EAChEC,QAAQ,EAAE,CAAC,QAAQ,EAAE,WAAW,CAAC;EACjCC,SAAS,EAAGC,OAAO,KAAM;IACvBC,YAAY,EAAED,OAAO,CAACE,KAAK,CAA8B;MACvDA,KAAK,EAAGC,OAAO,KAAM;QACnBC,GAAG,EAAE,QAAQ;QACbC,MAAM,EAAE,KAAK;QACbC,MAAM,EAAE;UACN,GAAGH;QACL;MACF,CAAC,CAAC;MACFI,YAAY,EAAEA,CAAA,KAAM,CAAC;QAAEC,IAAI,EAAE;MAAS,CAAC;IACzC,CAAC,CAAC;IACFC,YAAY,EAAET,OAAO,CAACE,KAAK,CAAC;MAC1BA,KAAK,EAAEA,CAAA,MAAO;QACZE,GAAG,EAAE,YAAY;QACjBC,MAAM,EAAE;MACV,CAAC,CAAC;MACFE,YAAY,EAAEA,CAAA,KAAM,CAAC;QAAEC,IAAI,EAAE;MAAY,CAAC;IAC5C,CAAC,CAAC;IACFE;EACF,CAAC;AACH,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEC,oBAAoB;EAAEC;AAAqB,CAAC,GAAGlB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}