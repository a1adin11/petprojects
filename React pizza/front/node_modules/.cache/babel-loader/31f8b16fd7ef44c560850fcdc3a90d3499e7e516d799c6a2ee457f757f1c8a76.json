{"ast":null,"code":"import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nexport const PizzaApi = createApi({\n  reducerPath: \"PizzaApi\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: \"http://localhost:3000/\"\n  }),\n  endpoints: builder => ({\n    getAllPizzas: builder.query({\n      query: reqProp => ({\n        url: `items?`,\n        params: {\n          category: reqProp.category,\n          _sort: reqProp.sortItem\n        }\n      }),\n      invalidatesTags: () => [{}]\n    })\n  })\n});\nexport const {\n  useGetAllPizzasQuery\n} = PizzaApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","PizzaApi","reducerPath","baseQuery","baseUrl","endpoints","builder","getAllPizzas","query","reqProp","url","params","category","_sort","sortItem","invalidatesTags","useGetAllPizzasQuery"],"sources":["C:/Users/alexs/OneDrive/Desktop/www/petprojects/React pizza/front/src/API/Pizzas.api.ts"],"sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nexport const PizzaApi = createApi({\r\n  reducerPath: \"PizzaApi\",\r\n  baseQuery: fetchBaseQuery({ baseUrl: \"http://localhost:3000/\" }),\r\n  endpoints: (builder) => ({\r\n    getAllPizzas: builder.query({\r\n      query: (reqProp) => ({\r\n        url: `items?`,\r\n        params: {\r\n          category: reqProp.category,\r\n          _sort: reqProp.sortItem\r\n        }\r\n      }),\r\n      invalidatesTags: () => [{}]\r\n    }),\r\n  }),\r\n});\r\n\r\n\r\nexport const { useGetAllPizzasQuery } = PizzaApi;\r\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,cAAc,QAAQ,8BAA8B;AAExE,OAAO,MAAMC,QAAQ,GAAGF,SAAS,CAAC;EAChCG,WAAW,EAAE,UAAU;EACvBC,SAAS,EAAEH,cAAc,CAAC;IAAEI,OAAO,EAAE;EAAyB,CAAC,CAAC;EAChEC,SAAS,EAAGC,OAAO,KAAM;IACvBC,YAAY,EAAED,OAAO,CAACE,KAAK,CAAC;MAC1BA,KAAK,EAAGC,OAAO,KAAM;QACnBC,GAAG,EAAG,QAAO;QACbC,MAAM,EAAE;UACNC,QAAQ,EAAEH,OAAO,CAACG,QAAQ;UAC1BC,KAAK,EAAEJ,OAAO,CAACK;QACjB;MACF,CAAC,CAAC;MACFC,eAAe,EAAEA,CAAA,KAAM,CAAC,CAAC,CAAC;IAC5B,CAAC;EACH,CAAC;AACH,CAAC,CAAC;AAGF,OAAO,MAAM;EAAEC;AAAqB,CAAC,GAAGf,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}